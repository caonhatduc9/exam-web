{
  "openapi": "3.0.0",
  "info": {
    "title": "Sakila Express API with Swagger",
    "version": "3.0.0",
    "description": "This is a simple CRUD API application made with Express and documented with Swagger",
    "license": {
      "name": "MIT",
      "url": "https://spdx.org/licenses/MIT.html"
    },
    "contact": {
      "name": "group07",
      "url": "https://group07.com",
      "email": "info@email.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "localhost"
    }
  ],
  "tags": [
    {
      "name": "actor",
      "description": "about actor route"
    },
    {
      "name": "film",
      "description": "about film route"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/actors/": {
      "get": {
        "tags": [
          "actor"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "actor list."
          }
        }
      },
      "post": {
        "tags": [
          "actor"
        ],
        "description": "",
        "responses": {
          "201": {
            "description": "Created"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Actor"
              }
            }
          }
        }
      }
    },
    "/actors/{actorId}": {
      "get": {
        "tags": [
          "actor"
        ],
        "description": "",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "actor ID."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "actor"
        ],
        "description": "",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "actor ID."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Actor"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "actor"
        ],
        "description": "",
        "parameters": [
          {
            "name": "actorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "actor ID."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/films/": {
      "get": {
        "tags": [
          "film"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "film"
        ],
        "description": "",
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filmId": {
                    "example": "any"
                  },
                  "firstName": {
                    "example": "any"
                  },
                  "lastName": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/films/{filmId}": {
      "get": {
        "tags": [
          "film"
        ],
        "description": "",
        "parameters": [
          {
            "name": "filmId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "film"
        ],
        "description": "",
        "parameters": [
          {
            "name": "filmId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "example": "any"
                  },
                  "lastName": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "film"
        ],
        "description": "",
        "parameters": [
          {
            "name": "filmId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Actor": {
        "type": "object",
        "properties": {
          "actorId": {
            "type": "number",
            "example": 1
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "lastUpdate": {
            "type": "string",
            "example": "2023-02-15T04:34:33.727"
          }
        }
      }
    }
  }
}